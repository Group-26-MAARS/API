{"version":3,"sources":["CreateAccnt.js","Login.js","Leaderboard.js","RecentActivity.js","MaarsCalendar.js","Metrics.js","Dashboard.js","ProcedureGeneration.js","Maintenance.js","Training.js","Design.js","App.js","serviceWorker.js","index.js","images/Atlas-V_2.jpg"],"names":["CreateAccnt","props","state","canShowDashboard","isCreateAccntHighlighted","isFNameHighlighted","isLNameHighlighted","isEmailHighlighted","isPasswordHighlighted","fNameStr","lNameStr","emailStr","passStr","canHighlightCreateBtn","bind","canHighlightFNameField","canHighlightLNameField","canHighlightPasswordField","canHighlightEmailField","insertNewAdminUser","valFromCreateAccnt","this","alert","closeCreateAccnt","console","log","callBack_appCreateAccnt","setState","style","width","height","backgroundColor","marginLeft","marginTop","borderRadius","opacity","align","Text","float","color","fontFamily","fontWeight","fontSize","textAlign","TextInput","placeholder","autoFocus","tabindex","checkIfCanHighlightFName","onFocus","onBlur","onChangeText","checkIfCanHighlightLName","checkIfCanHighlightEmail","checkIfCanHighlightPassword","cursor","checkIfCanHighlightCreateAccntBtn","verticalAlign","onPress","onClick","displayCreateAccount","Component","Login","isUsernameHighlighted","isLoginBtnHighlighted","currentUName","currentPWord","canRenderLogin","canRenderCreateAccnt","displayLogin","canHighlightUsernameField","canHighlightLoginBtn","sendCredentialsToApp","createAccnt","callBack_appCreateAccntHandler","handleEnterKey","event","key","inval","usernameAttempt","passwordAttempt","usernamepasswordprops","myBorderStyle","borderWidth","borderColor","borderStyle","position","checkIfCanHighlightUserName","text","onKeyPress","secureTextEntry","checkIfCanHighlightLoginButton","backgroundSize","backgroundImage","MyBackground","backgroundPosition","require","Metrics","username","password","firstName","lastName","age","salary","openMetricDetails","addData","inVal","callBack_dashboardMetricsData","padding","margin","marginRight","Dashboard","inData","metricsHandler","getGraphData","valFromMetrics","closeDashboard","callBack_appDashboardData","access","AuthStr","concat","axios","get","USER_API_BASE_URL","headers","Authorization","then","res","data","result","endDateIndex","length","myArray","Array","startDateIndex","i","overFlowX","Object","assign","numberOfLines","colors","label","discrete","lengend","legend","yTitle","curve","top","bottom","left","right","displayDashboard","ProcedureGeneration","displayProcGen","closeProcGen","displayFinalData","returnStr","push","valFromProcGen","callBack_appProcGen","overflow","whiteSpace","colspan","paddingLeft","Maintenance","displayMaintenance","closeMaintenance","valFromMaintenance","callBack_appMaintenance","Training","displayTraining","closeTraining","Math","round","valFromTraining","callBack_appTraining","Design","displayDesign","closeDesign","valFromDesign","callback_appDesign","App","canShowProcGen","canShowMaintenance","canShowTraining","canShowDesign","isCreateAccntBtnHighlighted","haveToken","callBack_appDashboardDataHandler","callBack_appProcGenHandler","callBack_appMaintenanceHandler","callBack_appTrainingHandler","callBack_appDesignHandler","loginHandler","usernameFromLogin","passwordFromLogin","prevState","post","token","dataFromDashboard","canShowCreateAccnt","createAccntProps","createAccntHandler","renderChild","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.77838189.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { TextInput} from 'react-native';\nimport { Text} from 'react-native';\n\nexport default class CreateAccnt extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            canShowDashboard: false,\n            isCreateAccntHighlighted: false,\n            isFNameHighlighted: false,\n            isLNameHighlighted: false,\n            isEmailHighlighted: false,\n            isPasswordHighlighted: false,\n            fNameStr: \"\",\n            lNameStr: \"\",\n            emailStr: \"\",\n            passStr: \"\"\n        };\n        this.canHighlightCreateBtn = this.canHighlightCreateBtn.bind(this);\n        this.canHighlightFNameField = this.canHighlightFNameField.bind(this);\n        this.canHighlightLNameField = this.canHighlightLNameField.bind(this);\n        this.canHighlightPasswordField = this.canHighlightPasswordField.bind(this);\n        this.canHighlightEmailField = this.canHighlightEmailField.bind(this);\n        this.insertNewAdminUser = this.insertNewAdminUser.bind(this);\n\n    }\n\n    insertNewAdminUser(valFromCreateAccnt){  \n\n        if((this.state.passStr != \"\") && (this.state.emailStr != \"\") && \n        (this.state.fNameStr != \"\") && (this.state.lNameStr != \"\")){\n            alert(\"Account Created\");\n            this.closeCreateAccnt(valFromCreateAccnt);\n        }\n        else{\n            if (this.state.fNameStr == \"\")\n            alert(\"Invalid First Name Field\");\n            else if (this.state.lNameStr == \"\")\n            alert(\"Invalid Last Name Field\");\n            else if (this.state.emailStr == \"\")\n            alert(\"Invalid Email Field\");\n            else if (this.state.passStr == \"\")\n            alert(\"Invalid Password Field\");\n        }\n    }\n    closeCreateAccnt(valFromCreateAccnt){\n        console.log(\"passing the value: \" + valFromCreateAccnt);\n    this.props.callBack_appCreateAccnt(valFromCreateAccnt);\n    }\n    canHighlightCreateBtn(){\n        this.setState({isCreateAccntHighlighted : !this.state.isCreateAccntHighlighted})\n    }\n    canHighlightFNameField(){\n        this.setState({isFNameHighlighted : !this.state.isFNameHighlighted})\n    }\n    canHighlightLNameField(){\n        this.setState({isLNameHighlighted : !this.state.isLNameHighlighted})\n    }\n    canHighlightEmailField(){\n        this.setState({isEmailHighlighted : !this.state.isEmailHighlighted})\n    }\n    canHighlightPasswordField(){\n        this.setState({isPasswordHighlighted : !this.state.isPasswordHighlighted})\n    }\n    checkIfCanHighlightCreateAccntBtn(){\n        if (this.state.isCreateAccntHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"black\"\n        }\n    }\n    checkIfCanHighlightFName(){\n        if (this.state.isFNameHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n    checkIfCanHighlightLName(){\n        if (this.state.isLNameHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n    checkIfCanHighlightEmail(){\n        if (this.state.isEmailHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n    checkIfCanHighlightPassword(){\n        if (this.state.isPasswordHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"Create Account just mounted\");\n    }\n    displayCreateAccount(){\n\n        var loginStyle = {\n            width:\"35%\",\n            height:\"100%\",\n            backgroundColor:\"#f2f2f2f2\",\n            marginLeft: \"35%\",\n            marginTop: \"7%\",\n            borderRadius: \"1%\",\n            opacity: \".8\",\n        //    position: \"absolute\"\n        };\n        var myBorderStyle = {\n            //borderWidth: \"3px\", \n            borderColor: \"black\", \n            borderStyle: \"solid\",\n            position: \"absolute\"\n        };\n            return(\n            \n                <div style={loginStyle}>\n                    <table style={{height: \"100%\", width: \"100%\", align: \"center\"}}>\n                    <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <Text style={{float: \"top\", color:\"black\", fontFamily: \"openSans\", fontWeight: \"400\", fontSize: \"1.4em\", textAlign: \"center\"}}>\n                                    Create Account\n                                </Text>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <TextInput placeholder=\"First Name\" autoFocus={true}\n                                tabindex=\"0\" \n                                style={{fontSize: \".8em\", backgroundColor: this.checkIfCanHighlightFName()}}\n                                onFocus={this.canHighlightFNameField}\n                                onBlur={this.canHighlightFNameField}\n                                onChangeText={fNameStr => this.setState({ fNameStr })}\n                                >\n                                    \n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <TextInput placeholder=\"Last Name\"\n                                tabindex=\"0\" \n                                style={{fontSize: \".8em\", backgroundColor: this.checkIfCanHighlightLName()}}\n                                onFocus={this.canHighlightLNameField}\n                                onBlur={this.canHighlightLNameField}\n                                onChangeText={lNameStr => this.setState({ lNameStr })}\n                                >\n                                    \n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <TextInput placeholder=\"Email Address\"                        \n                                tabindex=\"0\" \n                                style={{fontSize: \".8em\", backgroundColor: this.checkIfCanHighlightEmail()}}\n                                onFocus={this.canHighlightEmailField}\n                                onBlur={this.canHighlightEmailField}\n                                onChangeText={emailStr => this.setState({ emailStr })}\n                                >\n                                    \n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <TextInput placeholder=\"Password\" \n                                tabindex=\"0\" \n                                style={{fontSize: \".8em\", backgroundColor: this.checkIfCanHighlightPassword()}}\n                                onFocus={this.canHighlightPasswordField}\n                                onBlur={this.canHighlightPasswordField}\n                                onChangeText={passStr => this.setState({ passStr })}\n                                >\n                                    \n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\" style={{cursor: \"pointer\", width: \"100%\"}}>\n                                <div  style={{width: \"30%\", height: \"50%\", borderRadius: \"3%\", marginTop: \"18px\", backgroundColor: this.checkIfCanHighlightCreateAccntBtn()}}\n                                        onFocus={this.canHighlightCreateBtn}\n                                        onBlur={this.canHighlightCreateBtn}\n                                >\n                                    <div style={{fontSize: \".6em\", verticalAlign: \"middle\", color: \"white\"}}>\n                                       \n                                        <Text tabindex=\"0\" style={{fontSize: \".6em\", verticalAlign: \"middle\", color: \"white\", height: \"100%\", width: \"100%\"}}\n                                                  onPress={() => this.insertNewAdminUser(\"createAccount\")}\n                                                  onClick={()=> this.insertNewAdminUser(\"createAccount\")}\n                                                  onFocus={() => this.canHighlightCreateBtn()}\n                                                  onBlur={() => this.canHighlightCreateBtn()}\n                                        >Create</Text>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"15%\"}}>\n\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"15%\"}}>\n                            <td>\n                                <Text tabindex=\"0\" style={{fontSize: \".6em\", cursor: \"pointer\"}}\n                                tabindex=\"0\" \n                                >\n                                    Forgot Password?\n                                </Text>\n                            </td>\n                            <td>\n                            <Text tabindex=\"0\" style={{fontSize: \".6em\", cursor: \"pointer\", float:\"right\"}}\n                                tabindex=\"0\" \n                                onClick={() => this.closeCreateAccnt(\"createAccnt\")} \n                                onPress={() => this.closeCreateAccnt(\"createAccnt\")}\n                                >\n                                    Home\n                                </Text>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n                \n            );\n            \n        }\n    render(){\n        return(\n            <div>\n            {this.displayCreateAccount()}\n            </div>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport { TextInput} from 'react-native';\nimport { Text} from 'react-native';\nimport CreateAccnt from './CreateAccnt';\nimport MyBackground from \"./images/Atlas-V_2.jpg\"\n\n\nexport default class Login extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            canShowDashboard: false,\n            isUsernameHighlighted: false,\n            isPasswordHighlighted: false,\n            isLoginBtnHighlighted: false,\n            currentUName: \"\",\n            currentPWord: \"\",\n            canRenderLogin: true,\n            canRenderCreateAccnt: true\n        };\n        this.displayLogin = this.displayLogin.bind(this);\n        this.canHighlightUsernameField = this.canHighlightUsernameField.bind(this);\n        this.canHighlightPasswordField = this.canHighlightPasswordField.bind(this);\n        this.canHighlightLoginBtn = this.canHighlightLoginBtn.bind(this);\n        this.sendCredentialsToApp = this.sendCredentialsToApp.bind(this);\n        this.createAccnt = this.createAccnt.bind(this);\n        this.callBack_appCreateAccntHandler = this.callBack_appCreateAccntHandler.bind(this);\n        this.handleEnterKey = this.handleEnterKey.bind(this);\n    }\n    handleEnterKey(event){\n        if(event.key === 'Enter'){\n            this.sendCredentialsToApp(this.state.currentUName, this.state.currentPWord);\n        }\n        }\n    createAccnt(inval){\n        this.setState({\n            canRenderLogin: false,\n\n        })\n    }\n    callBack_appCreateAccntHandler(valFromCreateAccnt){\n        console.log(\"insdie createAccnt handler\");\n        if (valFromCreateAccnt){\n          this.setState({canRenderLogin : !this.state.canRenderLogin})\n        }\n      }\n    sendCredentialsToApp(usernameAttempt, passwordAttempt){\n        console.log(\"attempting to pass \" + usernameAttempt + \"and \" + passwordAttempt)\n        this.props.usernamepasswordprops(usernameAttempt,passwordAttempt);\n    }\n    canHighlightUsernameField(){\n        this.setState({isUsernameHighlighted : !this.state.isUsernameHighlighted})\n    }\n    canHighlightPasswordField(){\n        this.setState({isPasswordHighlighted : !this.state.isPasswordHighlighted})\n    }\n    canHighlightLoginBtn(){\n        this.setState({canHighlightLoginBtn : !this.state.canHighlightLoginBtn})\n    }\n    checkIfCanHighlightUserName(){\n        if (this.state.isUsernameHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n    checkIfCanHighlightPassword(){\n        if (this.state.isPasswordHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"#f2f2f2f2\"\n        }\n    }\n    checkIfCanHighlightLoginButton(){\n        if (this.state.isLoginBtnHighlighted == true){\n            return \"blue\"\n        }\n        else{\n            return \"black\"\n        }\n    }\n    displayLogin(){\n\n        var loginStyle = {\n            width:\"30%\",\n            height:\"100%\",\n            backgroundColor:\"#f2f2f2f2\",\n            marginLeft: \"35%\",\n            marginTop: \"7%\",\n            borderRadius: \"1%\",\n            opacity: \".8\",\n        //    position: \"absolute\"\n        };\n        var myBorderStyle = {\n            borderWidth: \"3px\", \n            borderColor: \"black\", \n            borderStyle: \"solid\",\n            position: \"absolute\"\n        };\n            return(\n            \n                <div style={loginStyle}>\n                    <table style={myBorderStyle} style={{height: \"100%\", width: \"100%\",\n}}>\n                        <tr style={myBorderStyle} style={{height: \"20%\"}}>\n                            <td style={myBorderStyle} style={{textAlign: \"center\"}}> \n                                    <Text style={{float: \"top\", color:\"black\", fontFamily: \"openSans\", fontWeight: \"600\", fontSize: \"1.4em\", textAlign: \"center\"}}>\n                                        MAARS\n                                    </Text>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>\n                            <td align=\"center\">\n                                <TextInput placeholder=\"Username\" autoFocus={true}\n                                style={{fontSize: \".8em\", width:\"69\", backgroundColor: this.checkIfCanHighlightUserName()}}\n                                onFocus={this.canHighlightUsernameField}\n                                onBlur={this.canHighlightUsernameField}\n                                onChangeText={(text) => { this.setState({ currentUName: text})}}\n                                onKeyPress={this.handleEnterKey}\n                                >               \n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"3%\"}}>  \n                        <td align=\"center\">\n                                <TextInput placeholder=\"Password\"\n                                style={{fontSize: \".8em\", width:\"69\", backgroundColor: this.checkIfCanHighlightPassword()}}\n                                secureTextEntry={true}\n                                onFocus={this.canHighlightPasswordField}\n                                onBlur={this.canHighlightPasswordField}\n                                onChangeText={(text) => { this.setState({ currentPWord: text})}}\n                                onKeyPress={this.handleEnterKey}\n                                >\n                                </TextInput>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"9%\"}}>\n                            <td align=\"center\" style={{cursor: \"pointer\"}}>\n                                <div  style={{width: \"30%\", height: \"50%\", borderRadius: \"3%\", marginTop: \"18px\", backgroundColor: this.checkIfCanHighlightLoginButton()}}\n                                        onFocus={this.canHighlightLoginBtn}\n                                        onBlur={this.canHighlightLoginBtn}\n                                >\n                                    <div style={{fontSize: \".6em\", verticalAlign: \"middle\", color: \"white\"}}>\n                                       \n                                        <Text tabindex=\"0\" style={{fontSize: \".6em\", verticalAlign: \"middle\", color: \"white\", height: \"100%\", width: \"100%\"}}\n                                                  onClick={() => this.sendCredentialsToApp(this.state.currentUName, this.state.currentPWord)}\n                                                  onPress={() => this.sendCredentialsToApp(this.state.currentUName, this.state.currentPWord)}\n                                                  onFocus={() => this.canHighlightLoginBtn()}\n                                                  onBlur={() => this.canHighlightLoginBtn()}\n                                        >Login</Text>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"15%\"}}>\n                            <td>\n                                <Text tabindex=\"0\" style={{fontSize: \".6em\", cursor: \"pointer\"}}\n                                    >\n                                    Forgot Password?\n                                </Text>\n                            </td>\n                        </tr>\n                        <tr style={myBorderStyle, {height: \"15%\"}}>\n                            <td>\n                            <Text tabindex=\"0\" style={{fontSize: \".6em\", cursor: \"pointer\", float:\"right\"}}\n                                    onPress={() => this.createAccnt(true)}\n                                    onClick={() => this.createAccnt(true)}\n                                >\n                                    Create Account\n                                </Text>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n                \n            );\n            \n        }\n    render(){\n        if (this.state.canRenderLogin){\n            return(\n                <div>\n                {this.displayLogin()}\n                </div>\n            );\n        }\n        else{\n            return(\n                <div style={{\n                backgroundSize: \"cover\", \n                height: \"100%\", \n                width: \"100%\",\n                position: ((this.state.canShowDashboard) ? \"relative\" : \"absolute\"),\n                backgroundImage: `url(${MyBackground})`,\n                backgroundPosition: \"center -60px\",\n                opacity: 1\n                        }}>\n                        <CreateAccnt callBack_appCreateAccnt={this.callBack_appCreateAccntHandler}/> \n                </div>\n            );\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport { Text} from 'react-native';\nimport \"./Leaderboard.css\";\n//import \"./mygradient.css\";\n\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\nexport default class Leaderboard extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayFinalData = this.displayFinalData.bind(this);\n    }\n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < this.state.inData.length; i++){\n            returnStr.push(\n            <tr>\n                <td style={{textAlign: \"left\"}}>                                \n                    <Text\n                        style={{fontSize:\".9em\"}}>\n                        {this.state.inData[i][0]}           \n                        &nbsp;\n                        {\n                            this.state.inData[i][1]\n                        }\n                    </Text>\n                </td>\n                <td style={{textAlign: \"left\"}}>                                \n                    <Text\n                        style={{fontSize:\".9em\"}}>\n                        {Math.floor(this.state.inData[i][3] / 60)} min,\n                        &nbsp;\n                        {Math.round(this.state.inData[i][3] % 60)} sec\n                    </Text>\n                </td>\n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n    componentDidUpdate(){\n     if ((this.props.access != null) && (this.state.inData === null))\n     {\n        const AuthStr = 'Bearer '.concat(this.props.access);\n        //console.log(\"AuthStr is \" + AuthStr);\n\n        axios.get(USER_API_BASE_URL + \"/mostactive\",{ headers: { Authorization: AuthStr } })\n        .then(res => {\n            //console.log(\"response in leaderboard is \" + res.data.result);\n            this.setState({inData : res.data.result});\n        })\n    }\n    //console.log(\"leaderboard component has now updated. state is now\" + this.state.inData);\n    //console.log(\"..and authorization is now \" + this.props.access);\n    }\n    componentDidMount(){\n        console.log(\"leaderboard component mounted. state is now \" + this.state.inData);\n        console.log(\"and access is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/mostactive\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in leaderboard is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n\n    render(){\n        if (this.state.inData === null) {\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return(\n                <div style={{color: \"red\"}}>\n                    Leaderboard <div></div>\n                    <table style={{marginTop: \"3px\"}}>\n                        {this.displayFinalData()}\n                    </table>\n                </div>\n            );\n          }\n\n    }\n}","import React, {Component} from 'react';\nimport { Text, StyleSheet} from 'react-native';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\nexport default class RecentActivity extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayFinalData = this.displayFinalData.bind(this);\n\n    }\n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < 3; i++){\n            returnStr.push(\n            <tr>\n                <td>\n                    <Text\n                        style={{fontSize:\".9em\"}}\n                    >\n                        {\n                            this.state.inData[i][0]\n                        }\n                        &nbsp;\n                        {\n                            this.state.inData[i][1]\n                        }\n                    </Text>\n                </td>\n                <td>\n                    <Text\n                        style={{fontSize:\".9em\"}}\n                    >\n                        {\n                            this.state.inData[i][3]\n                        }\n                    </Text>\n                </td>\n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n    componentDidUpdate(){\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/recent\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in recentActivity is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    componentDidMount(){\n        console.log(\"recentactivity component mounted. state is now \" + this.state.inData);\n        console.log(\"and access is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/recent\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in recentactivity is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    render(){\n        if (this.state.inData === null) {\n            // Render loading state ...\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return(\n                <>\n                <div style={{color: \"red\"}}>\n                    Recent Activity <div></div>\n                    <table>\n                        {this.displayFinalData()}\n                    </table>\n                </div>\n                </>\n            );\n          }\n\n    }\n}","import React, {Component} from 'react';\nimport Calendar from 'react-calendar'\n\nexport default class MaarsCalendar extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n        };\n    }\n\n    render(){\n        return(\n            <div style={{paddingLeft: \"30px\", paddingRight: \"30px\", paddingBottom:\"120px\", backgroundColor: \"#6acccb\", width: \"100%\", height: \"5%\"}}>\n                <Calendar width=\"5%\" />\n            </div>\n\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport { Text} from 'react-native';\nimport \"./Metrics.css\"\nimport axios from 'axios';\nrequire('typeface-titillium-web')\n\n\nexport default class Metrics extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            // Temporary state for testing\n            username: \"alpha\",\n            password: \"bravo\",\n            firstName: \"bravo\",\n            lastName: \"bravo\",\n            age: 24,\n            salary: 12345\n        };\n        this.openMetricDetails = this.openMetricDetails.bind(this);\n        this.addData = this.addData.bind(this); // temporary function for testing purposes\n\n    }\n    addData(){\n    //    console.log(\"adding data\");\n     //   let user = {username: this.state.username, password: this.state.password, \n   //         firstName: this.state.firstName, lastName: this.state.lastName, age: \n   //         this.state.age, salary: this.state.salary};\n    //    const USER_API_BASE_URL = 'http://localhost:8080/Users';\n//\n   //     axios.get(USER_API_BASE_URL)\n    //    .then(function(res){\n//\n   //         const persons = res.data;\n    //        console.log(persons.result[0].firstName);\n//\n       // });  \n    }\n\n    openMetricDetails(inVal){\n        if (inVal == \"procedureGen\"){\n            console.log(\"calling addData()\");\n\n            this.addData();\n        }\n        console.log(\"inVal is \" + inVal);\n        this.props.callBack_dashboardMetricsData(inVal);\n    }\n    render(){\n        var styles ={\n            myH1Class : {\n                color: \"blue\"\n            }\n        };\n        return(\n            <>\n                <div height=\"100%\" width=\"100%\" style={{position:\"absolute\"}}>\n                    <h2 style={{padding: 0, margin: 0}}>\n                        <Text style={{fontFamily:\"Titillium Web\", color: \"gray\"}}>\n                            Metrics\n                        </Text>\n                    </h2>\n                    <h3>\n                        <Text tabindex=\"0\"  style={{fontFamily:\"Titillium Web\", cursor: \"pointer\", color: \"#185b5b\"}}\n                            onClick={() => this.openMetricDetails(\"procedureGen\")}\n                            onPress={() => this.openMetricDetails(\"procedureGen\")}\n                        >\n                            Procedure Generation\n                            <p style={{fontSize: \".7em\", color: \"gray\", padding: 0, margin: 0, marginRight: \"15%\"}}>\n                                Provides metrics on time to complete tasks for installing safety wire, \n                                bolts, adhesive, and donning personal protective equipment. \n                            </p>\n                            <p>{this.addData()}</p>\n                        </Text>\n                    </h3>\n                    <h3>\n                        <Text tabindex=\"0\"  style={{fontFamily:\"Titillium Web\", cursor: \"pointer\", color: \"#185b5b\"}}\n                                onClick={() => this.openMetricDetails(\"maintenance\")}\n                                onPress={() => this.openMetricDetails(\"maintenance\")}\n                        >\n                            Maintenance\n                            <p style={{fontSize: \".7em\", color: \"gray\", padding: 0, margin: 0, marginRight: \"15%\"}}>\n                                Provides date/time metric information for the completion of the maintenance module\n                            </p>\n                        </Text>\n\n                    </h3>\n                    <h3>\n                    <Text tabindex=\"0\"  style={{fontFamily:\"Titillium Web\", cursor: \"pointer\", color: \"#185b5b\"}}\n                            onClick={() => this.openMetricDetails(\"design\")}\n                            onPress={() => this.openMetricDetails(\"design\")}\n                    >\n                            Design\n                            <p style={{fontSize: \".7em\", color: \"gray\", padding: 0, margin: 0, marginRight: \"15%\"}}>\n                                Provides date/time metric information for the completion of the Design module\n                            </p>\n                        </Text>\n                    </h3>\n                    <h3>\n                    <Text tabindex=\"0\"  style={{fontFamily:\"Titillium Web\", cursor: \"pointer\", color: \"#185b5b\"}}\n                            onClick={() => this.openMetricDetails(\"training\")}\n                            onPress={() => this.openMetricDetails(\"training\")}\n                    >\n                            Training\n                            <p style={{fontSize: \".7em\", color: \"gray\", padding: 0, margin: 0, marginRight: \"15%\"}}>\n                                Provides date/time metric information for the completion of the Design module as a \n                                whole as well as metrics on accuracy per training event.                            \n                            </p>\n                        </Text>\n                    </h3>\n                </div>\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport { Text, StyleSheet} from 'react-native';\nimport Leaderboard from \"./Leaderboard.js\";\nimport RecentActivity from \"./RecentActivity.js\";\nimport MaarsCalendar from \"./MaarsCalendar.js\";\nimport Metrics from \"./Metrics.js\";\n// import LinearGradient from 'react-native-linear-gradient';\nimport InlineBlock from 'react-inline-block';\nimport { LineChart, PieChart } from 'react-chartkick'\n// import 'chart.js'\nimport axios from 'axios';\nimport \"./Dashboard.css\"\n\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\nexport default class Dashboard extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            inData : null\n        };\n        this.metricsHandler = this.metricsHandler.bind(this);\n        this.getGraphData = this.getGraphData.bind(this);\n    }\n    getGraphData(){\n\n        /*\n        var len = this.state.inData;\n        for (var i = 0; i < len; i++){\n\n        }\n        */\n    }\n    metricsHandler(valFromMetrics){\n        console.log(\"valFRomMetricsIs\" + valFromMetrics);\n            this.closeDashboard(valFromMetrics);\n    }\n    closeDashboard(valFromMetrics){\n        this.props.callBack_appDashboardData(valFromMetrics);\n    }\n\n    componentDidUpdate(){\n        console.log(\"dashboard updated, and token is \" + this.props.access);\n        if (this.props.access != null)\n        {\n        const AuthStr = 'Bearer '.concat(this.props.access);\n        console.log(\"AuthStr is \" + AuthStr);\n\n        axios.get(USER_API_BASE_URL + \"/dates\",{ headers: { Authorization: AuthStr } })\n        .then(res => {\n            console.log(\"response in dashboard is \" + res.data.result.result);\n            if (res.data != null)\n            {\n                var endDateIndex = res.data.result.length;\n                var myArray = new Array();\n\n                console.log(\"length is \" + res.data.length);\n                if (endDateIndex > 10){\n                    var startDateIndex = res.data.result.length - 10;\n                    for (var i = 0; i < 10; i++)\n                    {\n                        myArray[i] = res.data.result[(startDateIndex - 1)]\n                        startDateIndex++;\n                    }\n                    console.log(\"starting at\" + startDateIndex);\n                }\n                console.log(\"final state: \" + myArray);\n                //this.setState({inData : res.data.result});\n            }\n        })\n    }\n    }\n    \n    componentDidMount(){\n        console.log(\"dashboard mounted, and token is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/dates\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in dashboard is \" + res.data.result);\n               if (res.data != null)\n               {\n                var endDateIndex = res.data.result.length;\n                var myArray = new Array();\n\n                console.log(\"length is \" + res.data.length);\n                if (endDateIndex > 10){\n                    var startDateIndex = res.data.result.length - 10;\n                    for (var i = 0; i < 10; i++)\n                    {\n                        myArray[i] = res.data.result[(startDateIndex)]\n                        startDateIndex++;\n                    }\n                    console.log(\"starting at\" + startDateIndex);\n                }\n                console.log(\"final state: \" + myArray);\n                this.setState({inData : myArray});\n               }\n           })\n       }\n    }\n    displayDashboard(){\n\n        return (  \n            <table height=\"100%\" width=\"100%\" style={{position: \"relative\", overFlowX: \"hidden\", opacity: \".55\"}}>\n                <tr height=\"5%\">\n                    <td width=\"35%\">\n                        <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                            <Text tabindex=\"0\" style={{float:\"left\", fontSize:\".8em\", color:\"#eaeaea\", marginLeft: \"4px\", cursor: \"pointer\"}} numberOfLines={1}\n                                    onClick={() => this.closeDashboard(\"logout\")} \n                                    onPress={() => this.closeDashboard(\"logout\")}        \n                                     >\n                                    MAARS\n                            </Text>\n                        </div> \n                    </td>\n                    <td width=\"65%\">\n                        <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                            <Text tabindex=\"0\" style={{float:\"right\", fontSize:\".8em\", color:\"#eaeaea\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                onClick={() => this.closeDashboard(\"dashboard\")} \n                                onPress={() => this.closeDashboard(\"dashboard\")} \n                                >\n                                    Account Management\n                            </Text>    \n                        </div>\n                    </td>\n                </tr>\n                <tr height=\"90%\">\n                    <td width=\"35%\" height=\"100%\">\n                        <div style={Object.assign({backgroundColor: \"white\", height: \"100%\", width: \"100%\"})}>\n                            <div height=\"50%\">\n                            {/* <LinearGradient \n                                start={{x: 0.0, y: 0.25}} end={{x: 0.5, y: 1.0}}\n                                //locations={[0,0.5,0.6]}\n                                colors={['#DEFAF9', '#DEFAF9', '#008080']}\n                                >\n                                        <span className=\"background\" style={{position:\"relative\"}}>\n                                            <Leaderboard access={this.props.access}/>  \n                                        </span>\n                                        <span className=\"background\" style={{position:\"relative\"}}>\n                                            <RecentActivity access={this.props.access}/> \n                                        </span>\n                            </LinearGradient> */}\n                            </div>\n                            <div height=\"55%\" style={Object.assign({ width: \"100%\", position: \"relative\"})}>\n                                <LineChart height=\"55%\" colors={[\"#185b5b\"]} \n                                label=\"Activity\"\n                              //  xTitle=\"Test\"\n                              discrete={true}\n                                lengend={true}\n                                legend=\"bottom\"\n                                yTitle=\"Count\"\n                                curve={true}\n                                style={{position: \"absolute\", top:0, bottom:0, left:0, right:0, margin: \"0 auto\"}} \n                                data={this.state.inData} />\n                            </div>\n                        </div>\n                    </td>\n                    <td width=\"65%\" height=\"100%\">\n                        <div style={Object.assign({ backgroundColor: \"white\", width: \"100%\", height: \"100%\"})}>\n                            <Text style={{color: \"red\"}}>\n                               <Metrics callBack_dashboardMetricsData={this.metricsHandler} />        \n                            </Text>                \n                        </div>\n                    </td>\n                </tr>\n                <tr height=\"5%\">\n                    <td width=\"35%\">\n                        <div style={Object.assign({backgroundColor:\"black\", width: \"100%\", height: \"100%\"})}>\n                        </div> \n                    </td>\n                    <td width=\"65%\">\n                        <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                            <Text tabindex=\"0\" style={{color: \"red\", float: \"right\", color:\"#eaeaea\", verticalAlign: \"bottom\", marginRight: \"4px\", cursor: \"pointer\"}}\n                            onClick={() => this.closeDashboard(\"logout\")} \n                            onPress={() => this.closeDashboard(\"logout\")} >\n                                Logout           \n                            </Text>\n                        </div> \n                    </td>\n                </tr>\n            </table>\n        );\n            \n    }\n    render(){\n        return(\n            <>\n                {this.displayDashboard()}\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport { Text, StyleSheet} from 'react-native';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\n\nexport default class ProcedureGeneration extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayProcGen = this.displayProcGen.bind(this);\n        this.closeProcGen = this.closeProcGen.bind(this);\n        this.displayFinalData = this.displayFinalData.bind(this);\n    }\n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < this.state.inData.length; i++){\n            returnStr.push(\n            <tr style={{fontSize: \".325em\"}}>\n                <td style={{textAlign: \"left\"}}>                                \n                {\n                    this.state.inData[i][0]\n                }\n                &nbsp;\n                {\n                    this.state.inData[i][1]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][2]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][3]\n                }     \n                </td>    \n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][4]\n                }     \n                </td>   \n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][5]\n                }     \n                </td>   \n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][6]\n                }     \n                </td>        \n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][7]\n                }     \n                </td>    \n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n\n   closeProcGen(valFromProcGen){\n    this.props.callBack_appProcGen(valFromProcGen);\n    }\n    componentDidUpdate(){\n        console.log(\"updating in procgen. access is : \"+  this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/procgen\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in procGen is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n    componentDidMount(){\n        console.log(\"procgen component mounted. state is now \" + this.state.inData);\n        console.log(\"and access is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/procgen\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in procGen is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n   displayProcGen(){\n        return (  \n                <table height=\"100%\" width=\"100%\" style={{position: \"relative\", overFlowX: \"hidden\", opacity: \".55\", overflow: \"hidden\",whiteSpace: \"nowrap\"}}>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"left\", fontSize:\".8em\", color:\"#eaeaea\", marginLeft: \"4px\", cursor: \"pointer\"}} numberOfLines={1}\n                                        onClick={() => this.closeProcGen(\"dBoard\")} \n                                        onPress={() => this.closeProcGen(\"dBoard\")}        \n                                         >\n                                        MAARS\n                                </Text>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"right\", fontSize:\".8em\", color:\"#eaeaea\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                    onClick={() => this.closeProcGen(\"dBoard\")} \n                                    onPress={() => this.closeProcGen(\"dBoard\")} \n                                    >\n                                        Account Management\n                                </Text>    \n                            </div>\n                        </td>\n                    </tr>\n                    <tr height=\"90%\" colspan=\"2\">\n                        <div style={{position:\"absolute\", color:\"white\", backgroundColor: \"white\", height: \"90%\", width: \"100%\"}}>\n                            <h1 style={{paddingLeft:\"20px\", marginTop: 0}}>\n                                <Text style={{fontFamily:\"Titillium Web\", fontSize: \".8em\", }}\n                                >\n                                Procedure Generation\n                                </Text>\n                                <table height=\"75%\" width=\"67%\" style={{fontFamily:\"Titillium Web\", color: \"black\", \n                                marginLeft: \"auto\", marginRight:\"auto\", borderWidth: \"3px\",\n                                    borderStyle:\"solid\", borderColor: \"gray\", borderRadius:\"1px\"}}>\n                                    <tr>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            User\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Date\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Bolt\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Safety Wire\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Adhesive\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            PPE\n                                        </th>     \n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Total Time\n                                        </th>                                                                                                                                                         \n                                    </tr>\n                                        {this.displayFinalData()}\n                                </table>\n                            </h1>\n                        </div>\n                    </tr>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor:\"black\", width: \"100%\", height: \"100%\"})}>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{color: \"red\", float: \"right\", color:\"#eaeaea\", verticalAlign: \"bottom\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                onClick={() => this.closeProcGen(\"logout\")} \n                                onPress={() => this.closeProcGen(\"logout\")} >\n                                    Logout           \n                                </Text>\n                            </div> \n                        </td>\n                    </tr>\n                </table>\n        );\n            \n    }\n    render(){\n        if (this.state.inData === null) {\n            // Render loading state ...\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return (\n            <>\n                {this.displayProcGen()}\n            </>);\n          }\n\n    }\n}\n","import React, {Component} from 'react';\nimport { Text, StyleSheet} from 'react-native';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\n\nexport default class Maintenance extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayMaintenance = this.displayMaintenance.bind(this);\n        this.closeMaintenance = this.closeMaintenance.bind(this);\n        this.displayFinalData = this.displayFinalData.bind(this);\n\n    }\n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < this.state.inData.length; i++){\n            returnStr.push(\n            <tr style={{fontSize: \".325em\"}}>\n                <td style={{textAlign: \"left\"}}>                                \n                {\n                    this.state.inData[i][0]\n                }\n                &nbsp;\n                {\n                    this.state.inData[i][1]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][2]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][3]\n                } sec    \n                </td> \n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n    closeMaintenance(valFromMaintenance){\n        console.log(\"passing the value: \" + valFromMaintenance);\n    this.props.callBack_appMaintenance(valFromMaintenance);\n}\ncomponentDidUpdate(){\n    if ((this.props.access != null) && (this.state.inData === null))\n    {\n       const AuthStr = 'Bearer '.concat(this.props.access);\n       //console.log(\"AuthStr is \" + AuthStr);\n\n       axios.get(USER_API_BASE_URL + \"/maintenance\",{ headers: { Authorization: AuthStr } })\n       .then(res => {\n           //console.log(\"response in leaderboard is \" + res.data.result);\n           this.setState({inData : res.data.result});\n       })\n   }\n   //console.log(\"leaderboard component has now updated. state is now\" + this.state.inData);\n   //console.log(\"..and authorization is now \" + this.props.access);\n   }\n   componentDidMount(){\n       console.log(\"maintenance component mounted. state is now \" + this.state.inData);\n       console.log(\"and access is \" + this.props.access);\n       if ((this.props.access != null) && (this.state.inData === null))\n       {\n          const AuthStr = 'Bearer '.concat(this.props.access);\n          console.log(\"AuthStr is \" + AuthStr);\n  \n          axios.get(USER_API_BASE_URL + \"/maintenance\",{ headers: { Authorization: AuthStr } })\n          .then(res => {\n              console.log(\"response in maintenance is \" + res.data.result);\n              this.setState({inData : res.data.result});\n          })\n      }\n   }\n   displayMaintenance(){\n        return (  \n                <table height=\"100%\" width=\"100%\" style={{position: \"relative\", overFlowX: \"hidden\", opacity: \".55\", overflow: \"hidden\", whiteSpace: \"nowrap\"}}>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"left\", fontSize:\".8em\", color:\"#eaeaea\", marginLeft: \"4px\", cursor: \"pointer\"}} numberOfLines={1}\n                                        onClick={() => this.closeMaintenance(\"dBoard\")} \n                                        onPress={() => this.closeMaintenance(\"dBoard\")}        \n                                         >\n                                        MAARS\n                                </Text>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"right\", fontSize:\".8em\", color:\"#eaeaea\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                    onClick={() => this.closeMaintenance(\"dBoard\")} \n                                    onPress={() => this.closeMaintenance(\"dBoard\")} \n                                    >\n                                        Account Management\n                                </Text>    \n                            </div>\n                        </td>\n                    </tr>\n                    <tr height=\"90%\" colspan=\"2\">\n                        <div style={{position:\"absolute\", color:\"white\", backgroundColor: \"white\", height: \"90%\", width: \"100%\"}}>\n                            <h1 style={{paddingLeft:\"20px\", marginTop: 0}}>\n                                <Text style={{fontFamily:\"Titillium Web\", fontSize: \".8em\", }}\n                                >\n                                Maintenance\n                                </Text>\n                                <table height=\"100%\" width=\"60%\" style={{fontFamily:\"Titillium Web\", color: \"black\", \n                                marginLeft: \"auto\", marginRight:\"auto\", borderWidth: \"3px\",\n                                    borderStyle:\"solid\", borderColor: \"gray\", borderRadius:\"1px\"}}>\n                                    <tr>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            User\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Most Recent Date\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Total Time\n                                        </th>                                                                                                                                                       \n                                    </tr>\n                                    {this.displayFinalData()}\n\n                                </table>\n                            </h1>\n                        </div>\n                    </tr>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor:\"black\", width: \"100%\", height: \"100%\"})}>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{color: \"red\", float: \"right\", color:\"#eaeaea\", verticalAlign: \"bottom\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                onClick={() => this.closeMaintenance(\"logout\")} \n                                onPress={() => this.closeMaintenance(\"logout\")} >\n                                    Logout           \n                                </Text>\n                            </div> \n                        </td>\n                    </tr>\n                </table>\n        );\n            \n    }\n    render(){\n        if (this.state.inData === null) {\n            // Render loading state ...\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return (\n            <>\n\n                {this.displayMaintenance()}\n            </>);\n          }\n\n    }\n}\n","import React, {Component} from 'react';\nimport { Text} from 'react-native';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\nexport default class Training extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayTraining = this.displayTraining.bind(this);\n        this.closeTraining = this.closeTraining.bind(this);\n        this.displayFinalData = this.displayFinalData.bind(this);\n\n    }\n    \n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < this.state.inData.length; i++){\n            returnStr.push(\n            <tr style={{fontSize: \".325em\"}}>\n                <td style={{textAlign: \"left\"}}>                                \n                {\n                    this.state.inData[i][0]\n                }\n                &nbsp;\n                {\n                    this.state.inData[i][1]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][2]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    Math.round(this.state.inData[i][3] * 100)\n                }%\n                </td> \n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n    closeTraining(valFromTraining){\n        console.log(\"passing the value: \" + valFromTraining);\n    this.props.callBack_appTraining(valFromTraining);\n    }\n    componentDidUpdate(){\n        console.log(\"updating in training. access is : \"+  this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/training\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in training is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n    componentDidMount(){\n        console.log(\"training component mounted. state is now \" + this.state.inData);\n        console.log(\"and access is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/training\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in training is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n    displayTraining(){\n        return (  \n                <table height=\"100%\" width=\"100%\" style={{position: \"relative\", overFlowX: \"hidden\", opacity: \".55\", overflow: \"hidden\", whiteSpace: \"nowrap\"}}>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"left\", fontSize:\".8em\", color:\"#eaeaea\", marginLeft: \"4px\", cursor: \"pointer\"}} numberOfLines={1}\n                                        onClick={() => this.closeTraining(\"dBoard\")} \n                                        onPress={() => this.closeTraining(\"dBoard\")}        \n                                         >\n                                        MAARS\n                                </Text>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"right\", fontSize:\".8em\", color:\"#eaeaea\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                    onClick={() => this.closeTraining(\"dBoard\")} \n                                    onPress={() => this.closeTraining(\"dBoard\")} \n                                    >\n                                        Account Management\n                                </Text>    \n                            </div>\n                        </td>\n                    </tr>\n                    <tr height=\"90%\" colspan=\"2\">\n                        <div style={{position:\"absolute\", color:\"white\", backgroundColor: \"white\", height: \"90%\", width: \"100%\"}}>\n                            <h1 style={{paddingLeft:\"20px\", marginTop: 0}}>\n                                <Text style={{fontFamily:\"Titillium Web\", fontSize: \".8em\", }}\n                                >\n                                Training\n                                </Text>\n                                <table height=\"100%\" width=\"60%\" style={{fontFamily:\"Titillium Web\", color: \"black\", \n                                marginLeft: \"auto\", marginRight:\"auto\", borderWidth: \"3px\",\n                                    borderStyle:\"solid\", borderColor: \"gray\", borderRadius:\"1px\"}}>\n                                    <tr>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            User\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Most Recent Date\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Completion\n                                        </th>                                                                                                                                                       \n                                    </tr>\n                                    {this.displayFinalData()}\n                                </table>\n                            </h1>\n                        </div>\n                    </tr>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor:\"black\", width: \"100%\", height: \"100%\"})}>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{color: \"red\", float: \"right\", color:\"#eaeaea\", verticalAlign: \"bottom\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                onClick={() => this.closeTraining(\"logout\")} \n                                onPress={() => this.closeTraining(\"logout\")} >\n                                    Logout           \n                                </Text>\n                            </div> \n                        </td>\n                    </tr>\n                </table>\n        );\n            \n    }\n    render(){\n        if (this.state.inData === null) {\n            // Render loading state ...\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return (\n            <>\n\n                {this.displayTraining()}\n            </>);\n          }\n\n    }\n}\n","import React, {Component} from 'react';\nimport { Text} from 'react-native';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8080/Users';\n\nexport default class Design extends Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            inData : null\n        };\n        this.displayDesign = this.displayDesign.bind(this);\n        this.closeDesign = this.closeDesign.bind(this);\n        this.displayFinalData = this.displayFinalData.bind(this);\n    }\n    \n    closeDesign(valFromDesign){\n        console.log(\"passing the value: \" + valFromDesign);\n    this.props.callback_appDesign(valFromDesign);\n    }\n    componentDidUpdate(){\n        console.log(\"updating in design. access is : \"+  this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/design\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in design is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n    componentDidMount(){\n        console.log(\"design component mounted. state is now \" + this.state.inData);\n        console.log(\"and access is \" + this.props.access);\n        if ((this.props.access != null) && (this.state.inData === null))\n        {\n           const AuthStr = 'Bearer '.concat(this.props.access);\n           console.log(\"AuthStr is \" + AuthStr);\n   \n           axios.get(USER_API_BASE_URL + \"/design\",{ headers: { Authorization: AuthStr } })\n           .then(res => {\n               console.log(\"response in design is \" + res.data.result);\n               this.setState({inData : res.data.result});\n           })\n       }\n    }\n    \n    displayFinalData(){\n        console.log(\"number of rows is \" + this.state.inData.length);\n        var returnStr = [];\n        for (var i = 0; i < this.state.inData.length; i++){\n            returnStr.push(\n            <tr style={{fontSize: \".325em\"}}>\n                <td style={{textAlign: \"left\"}}>                                \n                {\n                    this.state.inData[i][0]\n                }\n                &nbsp;\n                {\n                    this.state.inData[i][1]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][2]\n                }\n                </td>\n                <td style={{textAlign: \"left\"}}>                                         \n                {\n                    this.state.inData[i][3]\n                } sec      \n                </td> \n            </tr> \n            );\n        }\n        return (\n            returnStr\n        );  \n    }\n    displayDesign(){\n        return (  \n                <table height=\"100%\" width=\"100%\" style={{position: \"relative\", overFlowX: \"hidden\", opacity: \".55\", overflow: \"hidden\", whiteSpace: \"nowrap\"}}>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"left\", fontSize:\".8em\", color:\"#eaeaea\", marginLeft: \"4px\", cursor: \"pointer\"}} numberOfLines={1}\n                                        onClick={() => this.closeDesign(\"dBoard\")} \n                                        onPress={() => this.closeDesign(\"dBoard\")}        \n                                         >\n                                        MAARS\n                                </Text>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{float:\"right\", fontSize:\".8em\", color:\"#eaeaea\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                    onClick={() => this.closeDesign(\"dBoard\")} \n                                    onPress={() => this.closeDesign(\"dBoard\")} \n                                    >\n                                        Account Management\n                                </Text>    \n                            </div>\n                        </td>\n                    </tr>\n                    <tr height=\"90%\" colspan=\"2\">\n                        <div style={{position:\"absolute\", color:\"white\", backgroundColor: \"white\", height: \"90%\", width: \"100%\"}}>\n                            <h1 style={{paddingLeft:\"20px\", marginTop: 0}}>\n                                <Text style={{fontFamily:\"Titillium Web\", fontSize: \".8em\", }}\n                                >\n                                Design\n                                </Text>\n                                <table height=\"100%\" width=\"60%\" style={{fontFamily:\"Titillium Web\", color: \"black\", \n                                marginLeft: \"auto\", marginRight:\"auto\", borderWidth: \"3px\",\n                                    borderStyle:\"solid\", borderColor: \"gray\", borderRadius:\"1px\"}}>\n                                    <tr>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            User\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Most Recent Date\n                                        </th>\n                                        <th style={{fontSize: \".5em\", textAlign: \"left\"}}>\n                                            Total Time\n                                        </th>                                                                                                                                                       \n                                    </tr>\n                                    {this.displayFinalData()}\n                                </table>\n                            </h1>\n                        </div>\n                    </tr>\n                    <tr height=\"5%\">\n                        <td width=\"35%\">\n                            <div style={Object.assign({backgroundColor:\"black\", width: \"100%\", height: \"100%\"})}>\n                            </div> \n                        </td>\n                        <td width=\"65%\">\n                            <div style={Object.assign({backgroundColor: \"black\", width: \"100%\", height: \"100%\"})}>\n                                <Text tabindex=\"0\" style={{color: \"red\", float: \"right\", color:\"#eaeaea\", verticalAlign: \"bottom\", marginRight: \"4px\", cursor: \"pointer\"}}\n                                onClick={() => this.closeDesign(\"logout\")} \n                                onPress={() => this.closeDesign(\"logout\")} >\n                                    Logout           \n                                </Text>\n                            </div> \n                        </td>\n                    </tr>\n                </table>\n        );\n            \n    }\n    render(){\n        if (this.state.inData === null) {\n            // Render loading state ...\n            return (\n                <>\n                </>\n            );\n         } else {\n            // Render real UI ...\n            return (\n            <>\n\n                {this.displayDesign()}\n            </>);\n          }\n\n    }\n}\n","import React, {Component} from 'react';\nimport MyBackground from \"./images/Atlas-V_2.jpg\"\nimport Login from \"./Login.js\"\nimport Dashboard from \"./Dashboard.js\"\nimport ProcedureGeneration from \"./ProcedureGeneration.js\"\nimport Maintenance from \"./Maintenance.js\"\nimport Training from \"./Training.js\"\nimport Design from \"./Design.js\"\nimport axios from 'axios';\n\nconst USER_API_BASE_URL = 'http://localhost:8080/token';\n\n\n\nexport default class App extends Component{\n  constructor(props){\n    super(props);\n\n    this.state ={\n        canShowDashboard: false,\n        canShowProcGen: false,\n        canShowMaintenance: false,\n        canShowTraining: false,\n        canShowDesign: false,\n        isCreateAccntBtnHighlighted: false,\n        haveToken: false,\n        usernameAttempt: \"\",\n        passwordAttempt: \"\",\n    };\n    this.callBack_appDashboardDataHandler = this.callBack_appDashboardDataHandler.bind(this);\n    this.callBack_appProcGenHandler = this.callBack_appProcGenHandler.bind(this);\n    this.callBack_appMaintenanceHandler = this.callBack_appMaintenanceHandler.bind(this);\n    this.callBack_appTrainingHandler = this.callBack_appTrainingHandler.bind(this);\n    this.callBack_appDesignHandler = this.callBack_appDesignHandler.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n  }\n\n  loginHandler(usernameFromLogin, passwordFromLogin){\n    console.log(\"in loginhandler(), values are: \" + usernameFromLogin + \" \" + passwordFromLogin);\n    \n      this.setState({usernameAttempt : usernameFromLogin});\n      this.setState({passwordAttempt : passwordFromLogin});\n    \n    // If both attempts are not \"\" then, pass them into the \n\n  }\n  componentDidUpdate(prevState){\n    if ((prevState.canShowDashboard !== this.state.canShowDashboard) && (this.state.canShowDashboard)){\n      console.log(\"toggling off dashboard\");\n      return;\n    }\n    console.log(\"in componentDidUpdate, vals are: \" + this.state.usernameAttempt + \" \" + this.state.passwordAttempt);\n    console.log(\"also, token is \" + this.state.haveToken);\n    console.log(\"finally, canShowDash is \" + this.state.canShowDashboard);\n    if((this.state.haveToken == false)\n    && (this.state.usernameAttempt != \"\") && (this.state.passwordAttempt != \"\")){\n      axios.post(USER_API_BASE_URL + \"/generate-token\", {\n        \"username\": this.state.usernameAttempt,\n        \"password\": this.state.passwordAttempt\n    })\n      .then(res => {\n        if (res.data.result != null){\n          console.log(\"haveToken is \" + res.data.result.token);\n          if (res.data.result.token == null)\n            this.setState({haveToken : false});\n          else // if token is received\n          {\n            this.setState({haveToken : res.data.result.token});\n            this.setState({canShowDashboard : !this.state.canShowDashboard})\n          }\n\n        }\n      });\n    }\n  }\n  callBack_appProcGenHandler(valFromProcGen){\n    \n    if (this.state.canShowProcGen){\n      this.setState({canShowProcGen : !this.state.canShowProcGen})\n    }\n    \n    if (valFromProcGen == \"dBoard\"){\n      this.setState({canShowDashboard : !this.state.canShowDashboard})\n    }\n    else if (valFromProcGen == \"logout\"){\n      //logout\n      if (this.state.canShowProcGen)\n        this.setState({canShowProcGen : !this.state.canShowProcGen,\n        haveToken: false,\n        usernameAttempt: \"\",\n        passwordAttempt: \"\"\n        \n        })\n      console.log(\"Attempting to logout\");\n      axios.post(USER_API_BASE_URL + \"/logout\")\n      .then(res => {\n        console.log(\"logging out: \" + res.data.result);\n      })\n    }\n  }\n  callBack_appMaintenanceHandler(valFromMaintenance){\n    if (this.state.canShowMaintenance){\n      this.setState({canShowMaintenance: !this.state.canShowMaintenance})\n    }\n    if (valFromMaintenance == \"dBoard\"){\n      this.setState({canShowDashboard : !this.state.canShowDashboard})\n    }\n    else if (valFromMaintenance == \"logout\"){\n      //logout\n      if (this.state.canShowMaintenance)\n        this.setState({canShowMaintenance : !this.state.canShowMaintenance,\n        haveToken: false,\n        usernameAttempt: \"\",\n        passwordAttempt: \"\"\n        \n        })\n      console.log(\"Attempting to logout\");\n      axios.post(USER_API_BASE_URL + \"/logout\")\n      .then(res => {\n        console.log(\"logging out: \" + res.data.result);\n      })\n    }\n  }\n  \n  callBack_appTrainingHandler(valFromTraining){\n    if (this.state.canShowTraining){\n      this.setState({canShowTraining: !this.state.canShowTraining})\n    }\n    if (valFromTraining == \"dBoard\"){\n      this.setState({canShowDashboard : !this.state.canShowDashboard})\n    }\n    else if (valFromTraining == \"logout\"){\n      //logout\n      if (this.state.canShowTraining)\n        this.setState({canShowTraining : !this.state.canShowTraining,\n        haveToken: false,\n        usernameAttempt: \"\",\n        passwordAttempt: \"\"\n        \n        })\n      console.log(\"Attempting to logout\");\n      axios.post(USER_API_BASE_URL + \"/logout\")\n      .then(res => {\n        console.log(\"logging out: \" + res.data.result);\n      })\n    }\n  }\n  callBack_appDesignHandler(valFromDesign){\n    if (this.state.canShowDesign){\n      this.setState({canShowDesign: !this.state.canShowDesign})\n    }\n    if (valFromDesign == \"dBoard\"){\n      this.setState({canShowDashboard : !this.state.canShowDashboard})\n    }\n    else if (valFromDesign == \"logout\"){\n      //logout\n      if (this.state.canShowDesign)\n        this.setState({canShowDesign : !this.state.canShowDesign,\n        haveToken: false,\n        usernameAttempt: \"\",\n        passwordAttempt: \"\"\n        \n        })\n      console.log(\"Attempting to logout\");\n      axios.post(USER_API_BASE_URL + \"/logout\")\n      .then(res => {\n        console.log(\"logging out: \" + res.data.result);\n      })\n    }\n  }\n  callBack_appDashboardDataHandler(dataFromDashboard){\n    if (dataFromDashboard == null){\n      // If null, The logout or back button was clicked in Dashboard\n      this.setState({canShowDashboard : !this.state.canShowDashboard})\n    }\n    else if(dataFromDashboard == \"procedureGen\"){\n      console.log(\"ready to render procedureGen\");\n      // If user wants to navigate to Procedure Generation by clicking a link in dashboard\n      if (this.state.canShowDashboard == true)\n      {\n        // Close Dashboard\n        this.setState({canShowDashboard : !this.state.canShowDashboard})\n      }\n      // Open Procedure Generation\n      this.setState({canShowProcGen : !this.state.canShowProcGen})\n    }\n    else if(dataFromDashboard == \"maintenance\"){\n      console.log(\"ready to render maintenance\");\n      // Close Dashboard if open, and open Procedure Generation Metrics\n      if (this.state.canShowDashboard == true)\n      {\n        // Close Dashboard\n        this.setState({canShowDashboard : !this.state.canShowDashboard})\n      }\n      // Open Maintenance\n      this.setState({canShowMaintenance : !this.state.canShowMaintenance})\n    }\n    else if(dataFromDashboard == \"training\"){\n      console.log(\"ready to render training\");\n      // Close Dashboard if open, and open Procedure Generation Metrics\n      if (this.state.canShowDashboard == true)\n      {\n        // Close Dashboard\n        this.setState({canShowDashboard : !this.state.canShowDashboard})\n      }\n      // Open Training\n      this.setState({canShowTraining : !this.state.canShowTraining})\n    }\n    else if(dataFromDashboard == \"design\"){\n      console.log(\"ready to render design\");\n      // Close Dashboard if open, and open Procedure Generation Metrics\n      if (this.state.canShowDashboard == true)\n      {\n        // Close Dashboard\n        this.setState({canShowDashboard : !this.state.canShowDashboard})\n      }\n      // Open Design\n      this.setState({canShowDesign : !this.state.canShowDesign})\n    }  \n    else if(dataFromDashboard == \"createAccnt\"){\n      // Open Design\n      this.setState({canShowCreateAccnt : !this.state.canShowCreateAccnt})\n    }\n    else if (dataFromDashboard == \"logout\"){\n      //logout\n      console.log(\"Attempting to logout\");\n      axios.post(USER_API_BASE_URL + \"/logout\")\n      .then(res => {\n        console.log(\"logging out: \" + res.data.result);\n        this.setState({haveToken : false,\n          usernameAttempt : \"\",\n          canShowDashboard : !this.state.canShowDashboard\n        });\n      })\n    }\n  }\n\n  renderChild(){\n    if (this.state.canShowDashboard){\n      return(\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position:  ((this.state.canShowDashboard) ? \"absolute\" : \"relative\"),\n          top: \"100\", \n          backgroundImage: `url(${MyBackground})`,\n          margin: \"auto\",\n          backgroundPosition: \"center -60px\",\n          backgroundColor: \"rgba(204, 204, 204, 0.5)\", \n          }}\n        >\n          <Dashboard callBack_appDashboardData={this.callBack_appDashboardDataHandler} access={this.state.haveToken} />\n        </div>\n      );\n    }\n    else if(this.state.canShowProcGen){\n      return(\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position:  ((this.state.canShowProcGen) ? \"absolute\" : \"relative\"),\n          top: \"100\", \n          backgroundImage: `url(${MyBackground})`,\n          margin: \"auto\",\n          backgroundPosition: \"center -60px\",\n          backgroundColor: \"rgba(204, 204, 204, 0.5)\", \n          }}\n        >\n          <ProcedureGeneration callBack_appProcGen={this.callBack_appProcGenHandler} access={this.state.haveToken}  />\n        </div>\n      );\n    }\n    else if(this.state.canShowMaintenance){\n      return(\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position:  ((this.state.canShowMaintenance) ? \"absolute\" : \"relative\"),\n          top: \"100\", \n          backgroundImage: `url(${MyBackground})`,\n          margin: \"auto\",\n          backgroundPosition: \"center -60px\",\n          backgroundColor: \"rgba(204, 204, 204, 0.5)\", \n          }}\n        >\n          <Maintenance callBack_appMaintenance={this.callBack_appMaintenanceHandler} access={this.state.haveToken} /> \n        </div>\n      );\n    }\n    else if(this.state.canShowTraining){\n      return(\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position:  ((this.state.canShowTraining) ? \"absolute\" : \"relative\"),\n          top: \"100\", \n          backgroundImage: `url(${MyBackground})`,\n          margin: \"auto\",\n          backgroundPosition: \"center -60px\",\n          backgroundColor: \"rgba(204, 204, 204, 0.5)\", \n          }}\n        >\n          <Training callBack_appTraining={this.callBack_appTrainingHandler} access={this.state.haveToken}  /> \n        </div>\n      );\n    }\n    else if(this.state.canShowDesign){\n      return(\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position:  ((this.state.canShowDesign) ? \"absolute\" : \"relative\"),\n          top: \"100\", \n          backgroundImage: `url(${MyBackground})`,\n          margin: \"auto\",\n          backgroundPosition: \"center -60px\",\n          backgroundColor: \"rgba(204, 204, 204, 0.5)\", \n          }}\n        >\n          <Design callback_appDesign={this.callBack_appDesignHandler} access={this.state.haveToken} /> \n        </div>\n      );\n    }\n    else{\n      return (\n        <div style={{\n          backgroundSize: \"cover\", \n          height: \"100%\", \n          width: \"100%\",\n          position: ((this.state.canShowDashboard) ? \"relative\" : \"absolute\"),\n          backgroundImage: `url(${MyBackground})`,\n          backgroundPosition: \"center -60px\",\n          opacity: 1\n                }}>\n                <Login usernamepasswordprops={this.loginHandler} createAccntProps={this.createAccntHandler}/> \n        </div>\n      );\n    }\n  }\n  render(\n  ){\n    return(\n      <div height=\"100%\" width=\"100%\">\n        {this.renderChild()}\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Atlas-V_2.5bff2b72.jpg\";"],"sourceRoot":""}